#***************************************************************************
# License Applicability. Except to the extent portions of this file are
# made subject to an alternative license as permitted in the SGI Free 
# Software License C, Version 1.0 (the "License"), the contents of this 
# file are subject only to the provisions of the License. You may not use 
# this file except in compliance with the License. You may obtain a copy 
# of the License at Silicon Graphics, Inc., attn: Legal Services, 
# 1500 Crittenden Lane, Mountain View, CA 94043, or at: 
#   
# http://oss.sgi.com/projects/FreeC 
#
# Note that, as provided in the License, the Software is distributed 
# on an "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND 
# CONDITIONS DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED 
# WARRANTIES AND CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, 
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. 
# 
# Original Code. The Original Code is: OpenML ML Library, 1.1, 12/13/2001,
# developed by Silicon Graphics, Inc. 
# ML1.1 is Copyright (c) 2001 Silicon Graphics, Inc. 
# Copyright in any portions created by third parties is as indicated 
# elsewhere herein. All Rights Reserved. 
#
#***************************************************************************

#***************************************************************************
#
# Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.
#
# PLEASE NOTE THAT OPEN-SOURCING OF PARTICULAR FILES WHICH MAKE
# CALLS TO IRIX LIBRARIES MAY NOT BE DEEMED OR CONSTRUED IN ANY 
# WAY TO IMPLY OR CONSTITUTE ANY OPEN-SOURCING OF ANY PORTION OF IRIX!
#
# RESTRICTED RIGHTS LEGEND:
# Use, duplication or disclosure by the Government is subject to restrictions
# as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
# and Computer Software clause at DFARS 252.227-7013, and/or in similar or
# successor clauses in the FAR, DOD or NASA FAR Supplement.
#
#***************************************************************************
#
# ismdefs
#
# This file is part of the SGI Build Environment, sgibuild(7), and
# contains ISM specific macros and information. Every ISM should
# have an ismdefs and ismrules file in its top level directory. Every
# Makefile in the ISM should start with the following lines:
#
#	#! gmake
#	ISM_DEPTH = ../.. [as needed to cd to top of ISM]
#	include $(ISM_DEPTH)/ismdefs
#
# Anywhere AFTER the first target is defined, either the ismrules or
# ismcommonrules file must be included. The ISM top level Makefile
# must include the ismcommonrules file using the $(ISMCOMMONRULES)
# macro. Non-top level Makefiles must include the ismrules file using
# the $(ISMRULES) macro.
#
# Certain macros must be defined in the ismdefs files. You may define
# any additional macros and include any other files that are specific
# to the ISM.
#
#***************************************************************************

#
# ISM_NAME	- The programmatic name for the ISM. The name should
#		  be all lower case with no whitespace. ISM_NAME is used
#		  in many places such as the name for the RPM package.
#
# ISM_VERSION	- The version number for the ISM. The version should
#		  not contain any dashes or whitespace.
#
# ISM_START_DATE - The date this version of the ISM was created. This
#		  date is used as the base date for creating the package
#		  release number. The release number for a package build
#		  will be the number of hours between the build and the
#		  ISM_START_DATE. When ISM_VERSION is changed,
#		  ISM_START_DATE should be reset to the current date.
#		  The date format must be MM/DD/YYYY. See mkreleasenum(1)
#		  for more information on the creation of release numbers.
#
# ISMRULES	- This defines the location of the ismrules file. All
#		  Makefiles other than the top level Makefile must include
#		  the ismrules file using the $(ISMRULES) macro. The
#		  $(ISM_DEPTH) macro is used to locate the top of the
#		  ISM, where the ismrules file is located.
#
ISM_NAME	= ml_nullxcode

ISMRULES = $(ISM_DEPTH)/ismrules

#
# Do *not* override the version or start date -- keep the modules
# in sync with the rest of the project.
#
# ISM_VERSION
# ISM_START_DATE

#
# Include project-wide definition file
#
include $(XPROOT)/oss/build/$(PLATFORM)/ismdefs

#
# Define anything else that is platform-specific and module-wide...
#

